using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Media;
namespace inventory_management
{
    public partial class Frm_Deserved : DevExpress.XtraEditors.XtraForm
    {
        int row;
        public Frm_Deserved()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource2.FillAsync();
        }

        Database db = new Database();
        DataTable tb = new DataTable();

        public void AutoNumber()
        {
            tb.Clear();
            tb = db.readData("select max(Des_ID) from Deserved", "");
            if ((tb.Rows[0][0].ToString() == DBNull.Value.ToString()))
            {
                txtID.Text = "1";
            }
            else
            {
                txtID.Text = (Convert.ToInt32(tb.Rows[0][0]) + 1).ToString();
            }

            cbxType.Clear();

            dtpDate.DateTime = DateTime.Now;
            btnAdd.Enabled = true;
            btnRefresh.Enabled = true;
            btnDelete.Enabled = false;
            btnDeleteAll.Enabled = false;
            btnExit.Enabled = false;
            btnSave.Enabled = false;
        }

        public void Show()
        {
            tb.Clear();
            tb = db.readData("select * from Deserved where Delete_at IS NULL", "");

            if (tb.Rows.Count <= 0)
            {
                MessageBox.Show("Aucune donnée sur cet écran");
            }
            else
            {
                txtID.Text = tb.Rows[row][0].ToString();
                cbxType.Text = tb.Rows[row][1].ToString();

                dtpDate.Text = DateTime.Now.ToShortDateString();

                btnAdd.Enabled = false;
                btnRefresh.Enabled = true;
                btnDelete.Enabled = true;
                btnDeleteAll.Enabled = true;
                btnExit.Enabled = true;
                btnSave.Enabled = true;
            }

        }
        public void Get(int id)
        {
            tb.Clear();
            tb = db.readData("select * from Deserved where Des_ID = " + id + "", "");

            if (tb.Rows.Count <= 0)
            {
                MessageBox.Show("Aucune donnée sur cet écran");
            }
            else
            {
                txtID.Text = tb.Rows[0][0].ToString();
                cbxType.Text = tb.Rows[0][1].ToString();


                btnAdd.Enabled = false;
                btnRefresh.Enabled = true;
                btnDelete.Enabled = true;
                btnDeleteAll.Enabled = true;
                btnExit.Enabled = true;
                btnSave.Enabled = true;
            }

        }

        private void FillType() {
           // cbxType.DataBindings = db.readData("select * from Deserved","Greate") ;
        }

        private void Frm_Deserved_Load(object sender, EventArgs e)
        {
            
           
            AutoNumber();
        }

        private void calendarControl1_Click(object sender, EventArgs e)
        {

        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
           
            if (dxValidationProvider1.Validate())
            {
                cls_Des.add_Deserved(txtID.Text,(float)NudPrice.Value, DateTime.Now, txtNote.Text, Convert.ToInt32(cbxType.EditValue));
                SoundPlayer simpleSound = new SoundPlayer(@"c:\sound.wav");
                simpleSound.Play();
                sqlDataSource2.FillAsync();
                AutoNumber();
            }
            
        }

        BL.Deserved cls_Des = new BL.Deserved();

        private void NudPrice_Click(object sender, EventArgs e)
        {
            NudPrice.SelectionLength = NudPrice.Text.Length;
            NudPrice.Focus();
        }
    }
}